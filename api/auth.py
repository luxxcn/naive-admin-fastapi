from typing import Annotated
from fastapi import APIRouter, Depends, Response

from libs.error_code import Success
from libs.auth import Token, generate_token, generate_token_json, login_required, create_access_token, GetCurrentUserDep
from models.user.user import User

api = APIRouter(prefix="/auth")


@api.post("")
async def token(token: Annotated[str, Depends(generate_token)]):
    """form提交密码, 验证登录并生成token"""
    return token


@api.post("/login")
async def login(token: Annotated[Token, Depends(generate_token_json)]):
    """json提交密码, 验证登录并生成token"""
    # naive-admin前端需要accessToken字段
    data = {"accessToken": token.access_token}
    return Success(data=data)


@api.post("/logout")
async def logout(_: login_required):
    """退出登录"""
    return Success(data=True)


@api.get("/captcha")
async def captcha():
    """获取验证码"""
    svg_content = """
<svg xmlns="http://www.w3.org/2000/svg" width="80" height="40" viewBox="0,0,80,40"><rect width="100%" height="100%" fill="#fff"/><path fill="#7b94df" d="M34.83 29.27L34.79 29.23L34.73 29.17Q35.08 30.01 35.46 31.45L35.38 31.37L35.29 31.28Q32.31 30.37 29.02 30.56L28.98 30.52L29.11 30.65Q25.74 30.73 22.88 32.14L22.99 32.26L22.92 32.18Q23.09 31.70 23.12 31.76L23.19 31.83L23.11 31.75Q25.85 29.00 28.66 25.84L28.52 25.71L28.54 25.73Q31.66 22.13 32.50 18.79L32.51 18.80L32.52 18.80Q32.84 17.55 31.93 16.71L31.98 16.75L32.03 16.81Q31.11 15.96 29.84 16.07L29.86 16.09L29.85 16.08Q29.63 16.08 29.38 16.08L29.24 15.93L29.34 16.03Q28.25 16.03 27.35 16.68L27.33 16.66L27.42 16.75Q26.48 17.72 26.65 19.62L26.56 19.54L26.62 19.60Q25.29 19.29 24.42 18.97L24.42 18.97L24.46 19.01Q24.32 18.00 24.26 16.97L24.25 16.96L24.35 17.05Q24.23 15.82 24.66 15.00L24.60 14.94L24.58 14.92Q25.85 13.93 28.24 13.93L28.37 14.06L29.63 14.06L29.62 14.06Q31.28 14.11 31.96 14.20L31.79 14.03L31.91 14.15Q34.97 14.41 35.16 16.15L35.06 16.04L35.24 16.22Q35.29 16.63 35.24 17.20L35.25 17.21L35.14 17.10Q35.21 17.66 35.10 18.15L34.92 17.97L35.11 18.16Q33.78 23.79 28.37 28.69L28.41 28.73L28.49 28.80Q29.38 28.59 30.36 28.59L30.48 28.70L30.34 28.56Q32.72 28.63 34.76 29.20ZM34.40 14.38L34.29 14.26L34.36 14.34Q33.22 13.87 31.99 13.82L32.05 13.88L29.58 13.71L29.55 13.69Q26.40 13.53 24.82 14.32L24.86 14.36L24.71 14.21Q24.11 15.34 24.11 16.81L24.01 16.71L24.00 16.70Q24.13 17.32 24.34 19.33L24.21 19.20L24.21 19.20Q24.72 19.49 25.56 19.70L25.49 19.63L25.57 20.44L25.58 20.45Q25.53 20.76 25.58 21.14L25.50 21.06L25.52 21.08Q26.35 21.09 28.12 21.26L28.27 21.41L28.21 21.35Q28.18 21.07 28.18 20.83L28.09 20.74L28.22 20.87Q28.17 19.51 29.04 18.54L29.01 18.51L28.95 18.46Q29.99 17.66 31.27 17.74L31.20 17.67L31.11 17.58Q31.70 17.65 32.24 17.76L32.24 17.76L32.36 17.88Q32.28 17.99 32.34 18.29L32.36 18.31L32.48 18.44Q32.41 18.64 32.36 18.89L32.45 18.98L32.37 18.90Q31.52 22.35 28.37 25.80L28.36 25.79L28.36 25.79Q26.76 27.32 22.87 31.65L22.92 31.69L22.96 31.73Q22.70 32.21 22.46 32.61L22.55 32.71L22.60 32.76Q23.63 32.03 24.72 31.65L24.69 31.62L24.76 31.68Q24.18 32.03 23.50 33.09L23.53 33.12L23.51 33.10Q23.44 33.35 23.36 33.60L23.41 33.65L23.39 33.63Q26.96 32.25 30.88 32.39L30.75 32.27L30.79 32.30Q34.82 32.39 38.08 34.07L38.04 34.03L37.41 32.59L37.47 32.64Q36.91 31.59 36.72 31.02L36.69 30.99L36.77 31.07Q36.21 30.73 35.34 30.43L35.39 30.48L35.38 30.48Q35.27 29.96 35.00 28.98L35.05 29.03L34.98 28.96Q33.36 28.51 31.73 28.37L31.77 28.42L31.88 28.52Q35.14 25.18 36.23 19.28L36.15 19.20L36.28 17.12L36.34 17.19Q36.38 16.00 35.51 15.51L35.42 15.42L35.37 15.40L35.44 15.47Q35.45 15.45 35.39 15.45L35.32 15.38L35.29 15.35Q35.21 14.83 34.42 14.39Z"/><path fill="#9ce683" d="M11.86 12.67L12.01 12.82L11.86 12.67Q12.75 14.38 14.14 14.38L14.08 14.32L14.05 14.29Q14.52 14.41 14.82 14.30L14.78 14.26L14.81 14.29Q14.51 17.79 14.48 22.36L14.52 22.40L14.57 22.45Q14.60 26.97 14.74 30.72L14.74 30.73L14.71 30.69Q14.46 30.61 14.19 30.61L14.23 30.65L14.10 30.52Q13.20 30.60 12.20 31.93L12.13 31.87L12.13 31.87Q12.70 27.17 12.68 22.38L12.65 22.36L12.67 22.37Q12.53 17.48 11.88 12.69ZM11.80 32.68L11.75 32.63L11.84 32.72Q12.49 31.63 13.33 31.11L13.29 31.07L13.39 31.17Q13.23 31.71 13.17 32.47L13.22 32.52L13.33 32.63Q13.78 32.19 14.33 32.27L14.32 32.26L14.40 32.34Q15.79 32.42 16.77 34.41L16.87 34.52L16.74 34.38Q15.91 29.15 15.91 23.96L15.91 23.95L16.00 24.05Q16.00 18.66 16.58 13.58L16.54 13.55L16.62 13.63Q15.78 14.82 15.02 15.29L15.11 15.37L15.09 15.36Q15.08 14.83 15.16 13.85L15.04 13.73L15.06 13.75Q14.54 14.10 14.00 14.02L14.05 14.07L14.02 14.04Q12.28 13.80 11.55 11.73L11.53 11.72L11.51 11.70Q12.42 17.18 12.50 22.29L12.46 22.25L12.43 22.21Q12.49 27.30 11.78 32.66Z"/><path fill="#ed6868" d="M55.30 12.34L55.35 12.39L55.32 12.36Q57.23 13.67 58.48 13.97L58.34 13.83L58.43 13.92Q59.28 18.47 59.28 23.17L59.40 23.29L59.29 23.18Q59.31 26.06 58.93 28.92L58.90 28.88L58.97 28.96Q60.60 28.65 62.36 28.71L62.34 28.68L62.29 28.63Q64.16 28.79 65.68 29.31L65.69 29.31L65.62 29.24Q65.78 30.27 66.10 31.39L66.23 31.51L66.04 31.32Q63.61 30.33 60.86 30.52L61.00 30.66L61.01 30.67Q58.19 30.78 55.88 32.14L55.93 32.20L55.91 32.18Q57.55 27.34 57.36 22.34L57.36 22.35L57.27 22.26Q57.15 17.26 55.41 12.45ZM55.60 32.76L55.44 32.60L55.61 32.77Q56.01 32.41 56.99 31.89L57.02 31.92L57.03 31.94Q56.93 32.49 56.55 33.55L56.44 33.44L56.55 33.55Q59.08 32.35 61.82 32.35L61.72 32.25L61.87 32.40Q65.84 32.35 68.78 34.52L68.74 34.49L68.83 34.57Q68.23 33.37 67.49 31.25L67.47 31.23L67.48 31.24Q66.72 30.78 66.09 30.50L66.09 30.50L66.10 30.51Q66.07 30.08 65.86 29.07L65.91 29.12L65.74 28.95Q63.85 28.29 61.70 28.29L61.81 28.40L61.80 28.39Q61.25 28.38 60.68 28.41L60.58 28.31L60.77 28.50Q60.92 24.95 60.87 22.02L60.80 21.95L60.77 21.92Q60.75 19.02 60.51 15.45L60.46 15.41L60.51 15.46Q59.41 15.28 58.84 15.15L58.85 15.16L58.93 15.24Q58.80 14.67 58.63 13.66L58.56 13.59L58.73 13.76Q56.39 13.06 54.79 11.67L54.83 11.71L54.96 11.84Q56.86 16.84 57.05 22.20L57.13 22.27L57.03 22.18Q57.32 27.66 55.61 32.77Z"/><path fill="#bd49e3" d="M44.54 23.38L44.56 23.40L44.55 23.39Q41.63 23.33 41.22 25.50L41.08 25.37L41.11 25.40Q41.06 26.23 41.19 26.86L41.21 26.88L41.08 26.75Q41.22 27.43 41.54 28.43L41.36 28.25L41.51 28.40Q42.15 30.53 44.51 30.43L44.58 30.49L44.58 30.49Q46.14 30.67 47.10 29.56L47.08 29.54L47.05 29.51Q47.96 28.49 47.96 27.02L47.95 27.01L47.86 26.92Q48.00 26.54 47.89 25.78L47.86 25.75L47.95 25.84Q47.86 25.15 47.56 24.67L47.54 24.64L47.45 24.55Q46.46 23.53 44.61 23.45ZM48.11 36.69L48.03 36.61L47.92 36.49Q46.59 36.88 40.82 37.15L40.97 37.29L40.98 37.31Q39.70 37.28 38.53 36.68L38.45 36.60L38.59 36.74Q39.10 35.97 40.41 34.70L40.46 34.75L40.53 34.82Q42.12 35.42 43.61 35.29L43.62 35.30L43.67 35.34Q45.80 35.22 46.40 35.03L46.34 34.97L46.41 35.05Q47.90 34.44 47.90 33.16L47.96 33.22L47.95 33.21Q47.92 33.02 47.87 32.85L47.87 32.86L47.87 31.80L47.82 31.75Q47.80 31.19 47.80 30.62L47.82 30.63L47.76 30.58Q46.77 32.16 44.35 32.16L44.34 32.16L44.48 32.30Q41.71 32.30 40.55 30.73L40.46 30.64L40.41 30.60Q39.74 29.62 39.17 26.47L39.18 26.48L39.07 26.37Q38.78 25.21 38.78 24.20L38.88 24.30L38.84 24.27Q38.90 23.04 39.55 22.33L39.43 22.22L39.50 22.29Q40.71 21.30 44.03 21.30L44.09 21.36L45.34 21.49L45.30 21.45Q47.51 21.62 48.46 23.00L48.47 23.01L48.46 23.01Q48.66 22.47 48.96 21.30L48.88 21.22L48.92 21.26Q50.20 20.97 51.46 20.45L51.43 20.43L51.44 20.43Q49.57 24.83 49.57 29.99L49.63 30.05L49.66 30.08Q49.59 31.91 49.86 33.79L49.99 33.91L49.92 33.85Q50.09 34.37 50.04 34.86L49.95 34.78L49.95 34.77Q49.74 35.68 48.87 36.22L48.92 36.27L49.02 36.38Q48.67 36.57 48.07 36.65ZM50.04 38.59L50.05 38.60L50.14 38.69Q51.25 38.79 51.79 38.11L51.69 38.01L51.83 38.15Q51.94 37.33 51.86 36.82L51.95 36.91L51.90 36.86Q51.82 36.40 51.68 35.85L51.78 35.95L51.64 35.81Q50.84 32.16 51.09 28.41L51.04 28.35L51.08 28.40Q51.21 24.39 52.73 20.94L52.90 21.11L51.33 21.71L51.37 21.75Q51.52 21.30 51.68 20.90L51.70 20.91L52.04 20.08L52.01 20.05Q50.34 20.75 48.76 21.05L48.78 21.06L48.75 21.04Q48.61 21.74 48.50 22.48L48.35 22.32L48.41 22.39Q46.94 21.05 44.06 21.05L44.06 21.05L42.75 20.99L42.79 21.03Q40.47 21.02 39.27 22.03L39.34 22.10L39.34 22.10Q38.66 22.78 38.69 24.14L38.57 24.02L38.66 24.11Q38.68 25.87 39.42 28.92L39.47 28.98L39.34 28.84Q39.77 30.30 40.64 31.31L40.69 31.36L40.72 31.39L40.90 31.57L40.89 31.56Q41.77 33.29 43.62 33.67L43.53 33.58L43.52 33.56Q44.60 33.86 45.63 33.88L45.52 33.77L45.51 33.76Q46.81 33.84 47.57 33.57L47.66 33.65L47.67 33.66Q47.10 34.64 45.19 34.89L45.16 34.85L45.25 34.94Q44.47 35.03 43.98 35.03L43.95 35.00L43.73 35.05L43.72 35.04Q41.70 35.04 40.51 34.36L40.58 34.43L39.21 35.51L39.20 35.50Q38.63 36.13 38.04 36.81L38.08 36.86L38.02 36.79Q38.78 37.23 39.49 37.36L39.44 37.32L38.92 38.04L38.86 37.99Q40.83 38.79 44.86 38.79L44.92 38.86L45.04 38.81L45.07 38.84Q47.49 38.68 50.05 38.60ZM45.92 25.06L45.81 24.95L45.99 25.13Q46.89 25.05 47.54 25.35L47.43 25.24L47.50 25.31Q47.52 25.55 47.57 26.04L47.58 26.04L47.73 26.19Q47.67 26.32 47.64 26.97L47.67 27.00L47.58 26.91Q47.61 28.36 46.82 29.28L46.87 29.33L46.89 29.35Q45.92 30.22 44.56 30.20L44.52 30.16L44.69 30.33Q43.48 30.10 42.88 29.80L42.89 29.81L42.93 29.85Q42.74 29.11 42.71 28.38L42.66 28.33L42.69 28.36Q42.69 25.34 45.98 25.12Z"/><path d="M15 31 C54 7,34 9,78 24" stroke="#8ee23a" fill="none"/></svg>
"""
    return Response(content=svg_content, media_type="image/svg+xml")


@api.post("/current-role/switch/{roleCode}")
async def switch_role(roleCode: str, user: GetCurrentUserDep):
    """切换角色"""
    newToken = create_access_token(user, roleCode)
    data = {"accessToken": newToken.access_token}
    return Success(data=data)
